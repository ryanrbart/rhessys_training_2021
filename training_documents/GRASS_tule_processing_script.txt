# Setting up Tule watershed in Grass
# February 2021
# Ryan Bart



# ------------------------
# Sources for data

# DEM: https://www.usgs.gov/core-science-systems/national-geospatial-program/national-map
# Land cover: https://www.mrlc.gov/
# Streamflow: https://waterdata.usgs.gov/ca/nwis/uv?site_no=11203580


# ------------------------
# GRASS basics

# This document is a modification of the tutorial found on the RHESSys Wiki for Grass processing, https://github.com/RHESSys/RHESSys/wiki/grass-tutorial-for-creating-necessary-RHESSys-maps. See the wiki for additional information and non-command line options.

# GRASS GIS is an open-source GIS platform. Here is the link to the reference manual, https://grass.osgeo.org/grass78/manuals/index.html. Here is a list of common raster https://grass.osgeo.org/grass78/manuals/raster.html and vector https://grass.osgeo.org/grass78/manuals/vector.html functions.

# Helpful command line functions
g.region -p                               # Current region settings
g.list rast                               # List all raster files
g.list vect                               # List all vector files
r.info <filename>                         # Details on specific data
g.remove -f type=raster name=<filename>   # Remove a file
r.report map=<filename>                   # Make a report on a raster
g.copy rast=<filename>,MASK               # Add mask
r.mask -r                                 # Remove mask

# ------------------------
# Start GRASS

# Start GRASS
# For '1. Select GRASS GIS database directory', select directory where you want GRASS data set to be stored. Possibly home folder.
# For '2 Select GRASS location', select New.
# For Project Location, type 'Tule'. Press Next.
# Choose method for creating a new location window: choose - Select coordinate system parameters from a list
# You will need to have the projection info for the project you are setting up. Choose Projection window: choose - Projection code: UTM. Press Next.
# Choose projection parameters window: choose the button for - Datum with associated ellopsoid, and type in the Projection Zone box: 10. Press Next.
# Specify geodetic datum window - Datum code box: choose - nad27 with clark66. Press Next.
# Select datum transformation window pop up: option 1. Press Next.
# A summary window will open. Press Finish.


# Note: This above sequence may not work. See https://github.com/OSGeo/grass/issues/758
# Alternatively, go back to 'Choose method for creating a new location window' and choose - Select EPSG code of spatial reference system.
# Type 26910 for EPSG code.
# Select datum transformation window pop up: option 1. Press Next.
# A summary window will open. Press Finish.


# Highlight the location (Tule) and the Accessible mapset (choose PERMANENT)
# Click Start GRASS session
# GRASS should open a terminal window, a Layer Manager window, and a Display window.


# ------------------------
# Import data

# DEM
r.import input=YOUR_PATH\rhessys_training_2021\data\dem\USGS_1_n37w119.tif output=dem_tule


# Land Cover (This one can take 15+ minutes)
r.import input=YOUR_PATH\rhessys_training_2021\data\land_cover\NLCD_2016_Land_Cover_tule_region.tif output=lc_tule --overwrite


# Gauge location.
# USGS provides lat/long, but needed to change coordinate from lat/long to UTM zone 10. Used a conversion calculator at https://tool-online.com/en/coordinate-converter.php. 
In theory, these might work on command line. However, neither worked and instead used gui by calling v.in.ascii.
cat YOUR_PATH\rhessys_training_2021\data\gauges\gauges_tule.txt | v.in.ascii out=gauges x=2 y=3 cat=1 columns='cat int, x double precision, y double precision, name varchar(15)' 
v.in.ascii input=YOUR_PATH\rhessys_training_2021\data\gauges\gauges_tule.txt  out=gauges x=2 y=3 cat=1 columns='cat int, x double precision, y double precision, name varchar(15)'



# ------------------------
# Set region

# Determine the extent area of interest.
g.region n=4004781.30 e=900193.19 s=3995884.94 w=888577.77 res=90

# Create new vector based on region and crop by the vector
v.in.region output=region_new
r.mask vector=region_new
r.mapcalc "dem_tule_cropped = dem_tule" --overwrite



# ------------------------
# Process data

# Slope and aspect
r.slope.aspect  el=dem_tule_cropped  slope=slope  aspect=aspect --overwrite

# Horizons
r.horizon ‐d elevation=dem_tule_cropped direction=0 output=east --overwrite
r.horizon ‐d elevation=dem_tule_cropped direction=180 output=west --overwrite
r.mapcalc 'east_horizon = sin(east_000)' --overwrite
r.mapcalc 'west_horizon = sin(west_180)' --overwrite
r.mapcalc 'ehr.100 = east_horizon*100' --overwrite
r.mapcalc 'whr.100 = west_horizon*100' --overwrite


# Basin, hillslope and stream
# Threshold can be adjusted to increase or decrease hillslope size
r.watershed threshold=20 el=dem_tule_cropped drain=drain ba=basin ha=hill stream=str --overwrite

# Make stream a single color
r.mapcalc 'streams = (str > 0)*1' --overwrite


g.list rast   # Check if all rasters were created

# Check size of basins
r.stats -c -p input=basin    # -c is number of cells for each hillslope, -p is percent of area


# ------------------------
# Generate patch map

# Find 'max' value 
r.info basin
r.mapcalc 'patch = (dem_tule_cropped * 388) + basin' --overwrite
r.clump input=patch output=patch.cl --overwrite



# ------------------------
# Display stream and gauges

d.mon start=wx0x
d.rast dem_tule_cropped
d.rast streams
d.vect gauges 

# Select stream outlets (right click on stream to copy coordinates to clipboard)
r.what

r.water.outlet input=drain output=basin_tule coordinates=891591.742002,3998069.4306 --overwrite
# Display watersheds
d.rast basin_tule


# Report size of each watershed
r.report map=basin_tule units=h,a

# Turn mask on
g.copy rast=basin_tule,MASK



# ------------------------
# Adjust land-cover raster 


# Generate an overstory canopy (forested areas = 42, shrub = 52)
r.stats -c -p input=lc_tule
# Remove land cover for over-story that is minuscule
r.mapcalc 'lc_overstory_tule = if(lc_tule == 90,42,lc_tule)' --overwrite
r.mapcalc 'lc_overstory_tule = if(lc_overstory_tule == 43,42,lc_overstory_tule)' --overwrite
r.mapcalc 'lc_overstory_tule = if(lc_overstory_tule == 41,42,lc_overstory_tule)' --overwrite
r.mapcalc 'lc_overstory_tule = if(lc_overstory_tule == 71,52,lc_overstory_tule)' --overwrite
r.stats -c -p input=lc_overstory_tule

# Generate an understory canopy (forested areas = 50, non-veg (shrub areas) = 31)
r.mapcalc 'lc_understory_tule = if(lc_overstory_tule == 42,50,31)' --overwrite
r.stats -c -p input=lc_understory_tule



# Generate overstory cover_fraction map (0.6 for low conifer, 0.6 for high conifer, 0.9 for shrub)
r.mapcalc 'overstory_cover_fraction = if(lc_overstory_tule == 52,0.9,0.6)' --overwrite

# Generate understory cover_fraction map (0.6 for low understory, 0.6 for high understory, 0.6 for non-veg)
r.mapcalc 'understory_cover_fraction = if(lc_overstory_tule == 42,0.6,0.6)' --overwrite



# ------------------------
# Generate multi-scale routing map (if keeping patch homogenous but dividing into aspatial patches for thinning, can use land cover map)
# Not implemented



# ------------------------
# Export to ascii for RHESSysPreprocessing script
r.out.ascii input=basin_tule@PERMANENT output="\rhessys_training_2021\data\rasters_tule\basin" --overwrite
r.out.ascii input=dem_tule_cropped@PERMANENT output="\rhessys_training_2021\data\rasters_tule\dem" --overwrite
r.out.ascii input=streams@PERMANENT output="\rhessys_training_2021\data\rasters_tule\streams" --overwrite
r.out.ascii input=hill@PERMANENT output="\rhessys_training_2021\data\rasters_tule\hill" --overwrite
r.out.ascii input=basin@PERMANENT output="\rhessys_training_2021\data\rasters_tule\subwatershed" --overwrite
r.out.ascii input=patch.cl@PERMANENT output="\rhessys_training_2021\data\rasters_tule\patch" --overwrite
r.out.ascii input=slope@PERMANENT output="\rhessys_training_2021\data\rasters_tule\slope" --overwrite
r.out.ascii input=aspect@PERMANENT output="\rhessys_training_2021\data\rasters_tule\aspect" --overwrite
r.out.ascii input=ehr.100@PERMANENT output="\rhessys_training_2021\data\rasters_tule\ehr" --overwrite
r.out.ascii input=whr.100@PERMANENT output="\rhessys_training_2021\data\rasters_tule\whr" --overwrite
r.out.ascii input=lc_overstory_tule@PERMANENT output="\rhessys_training_2021\data\rasters_tule\lc_overstory" --overwrite
r.out.ascii input=lc_understory_tule@PERMANENT output="\rhessys_training_2021\data\rasters_tule\lc_understory" --overwrite








